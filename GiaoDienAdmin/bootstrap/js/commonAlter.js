String.prototype.isEmpty = function () { return 0 === this.length || !this.trim() }, String.prototype.trim || (String.prototype.trim = function () { return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "") }), Array.prototype.forEach || (Array.prototype.forEach = function (t, o) { var e, n; if (null === this) throw new TypeError(" this is null or not defined"); var r = Object(this), i = r.length >>> 0; if ("function" != typeof t) throw new TypeError(t + " is not a function"); for (arguments.length > 1 && (e = o), n = 0; i > n;) { var a; n in r && (a = r[n], t.call(e, a, n, r)), n++ } }); var QueryString = function () { for (var t = {}, o = window.location.search.substring(1), e = o.split("&"), n = 0; n < e.length; n++) { var r = e[n].split("="); if ("undefined" == typeof t[r[0]]) t[r[0]] = decodeURIComponent(r[1]); else if ("string" == typeof t[r[0]]) { var i = [t[r[0]], decodeURIComponent(r[1])]; t[r[0]] = i } else t[r[0]].push(decodeURIComponent(r[1])) } return t }(), typeCM = ["", "info", "success", "warning", "danger"], common = { showNotification: function (t, o, e) { color = Math.floor(4 * Math.random() + 1), $.notify({ icon: "", message: e }, { type: typeCM[color], timer: 4e3, placement: { from: t, align: o } }) }, validateEmail: function (t) { return emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/, t.isEmpty() ? !1 : emailReg.test(t) } };